<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.languagetool.server.WikipediaMapper">
    <select id="selectWikipediaArticle" resultType="org.languagetool.server.CorpusArticleEntry">
        SELECT id, language_code, title, revision, wikitext, anonymized_html, css_url, analyzed, import_date, url FROM corpus_article WHERE id=#{id}
    </select>
    <select id="selectNonAppliedWikipediaSuggestions" resultType="org.languagetool.server.CorpusMatchEntry">
        SELECT corpus_match.*
        FROM corpus_match
        WHERE applied is null
          AND article_language_code in <foreach item="languageCode" index="index" collection="languageCodes"  open="(" separator="," close=")">
              #{languageCode}
          </foreach>
          AND corpus_match.ruleid NOT IN (select ruleid from user_ignored_rules uir where (<foreach collection="usernames" index="languageCode" item="username" open="(" separator=" or " close=")">
              (uir.username = #{username} and uir.language_code = #{languageCode})
          </foreach>))
          AND not exists(
              select 1
              from corpus_match_skipped skipped
              where corpus_match_id = corpus_match.id
                and <foreach collection="usernames" index="languageCode" item="username" open="(" separator=" or " close=")">
                    (skipped.username = #{username} and article_language_code = #{languageCode})
                </foreach>
          )
        order by rand()
        limit 10
    </select>
    <select id="selectAppliedWikipediaSuggestions" resultType="org.languagetool.server.CorpusMatchEntry">
        SELECT id,
               article_id,
               ruleid,
               rule_category,
               rule_subid,
               rule_description,
               message,
               error_context,
               small_error_context,
               html_error_context,
               replacement_suggestion,
               (IF(skipped.date is not null, null, applied)) AS applied,
               IFNULL(skipped.date, applied_date),
               applied_reason,
               IFNULL(skipped.username, applied_username),
               languagetool_version
        FROM corpus_match m
        LEFT JOIN corpus_match_skipped skipped on m.id = skipped.corpus_match_id
        WHERE <foreach collection="usernames" index="languageCode" item="username" open="(" separator=" or " close=")">
            ((skipped.username = #{username} or m.applied_username = #{username}) and article_language_code = #{languageCode})
        </foreach>
        ORDER BY IFNULL(skipped.date, applied_date) DESC LIMIT 10
    </select>
    <select id="selectWikipediaSuggestion" resultType="org.languagetool.server.CorpusMatchEntry">
        SELECT * FROM corpus_match WHERE id=#{id}
    </select>
    <update id="updateWikipediaSuggestion">
        UPDATE corpus_match SET applied=#{applied}, applied_date=current_timestamp(), applied_reason=#{reason}, applied_username=#{username} WHERE id=#{id}
    </update>
    <select id="selectMostSkippedRules" resultType="hashmap">
        SELECT
               article_language_code,
               corpus_match.ruleid,
               IF(uir.ruleid IS NULL, 0, 1) AS ignored,
               COUNT(*) AS skips_per_rule
        FROM corpus_match_skipped
        INNER JOIN corpus_match ON corpus_match.id = corpus_match_skipped.corpus_match_id
        LEFT JOIN user_ignored_rules uir ON article_language_code = uir.language_code AND corpus_match_skipped.username = uir.username AND corpus_match.ruleid = uir.ruleid
        WHERE <foreach collection="usernames" index="languageCode" item="username" open="(" separator=" or " close=")">
            (corpus_match_skipped.username = #{username} and article_language_code = #{languageCode})
        </foreach>
        GROUP BY ruleid
        HAVING COUNT(*) >= 5
        ORDER BY COUNT(*) DESC
    </select>
    <insert id="addIgnoredRule">
        INSERT INTO user_ignored_rules(language_code, username, ruleid) VALUES(#{languageCode}, #{username}, #{ruleid})
    </insert>
    <delete id="removeIgnoredRule">
        DELETE FROM user_ignored_rules WHERE language_code=#{languageCode} AND username=#{username} AND ruleid=#{ruleid}
    </delete>
    <insert id="skipWikipediaSuggestion">
        INSERT INTO corpus_match_skipped(corpus_match_id, date, username) VALUES(#{corpus_match_id}, current_timestamp(), #{username})
    </insert>
    <select id="selectAccessToken" resultType="org.languagetool.server.AccessToken">
        SELECT * FROM access_token WHERE access_token=#{accessToken} AND language_code=#{languageCode}
    </select>
    <select id="getDecisionStats" resultType="org.languagetool.server.DatabaseAccess$DayStatistics">
        select distinct date_format(applied_date, '%Y-%m-%d'),
                        applied,
                        count(*)
        FROM corpus_match
        WHERE applied_date is not null
        GROUP BY date_format(applied_date, '%Y-%m-%d'), applied
        ORDER BY date_format(applied_date, '%Y-%m-%d'), applied
    </select>
    <select id="selectUserStats" resultType="org.languagetool.server.DatabaseAccess$UserStatistics">
        SELECT m.article_language_code,
            (IF(skipped.date is not null, null, applied)) AS applied,
            COUNT(*)
        FROM corpus_match m
        LEFT JOIN corpus_match_skipped skipped on m.id = skipped.corpus_match_id
        WHERE <foreach collection="usernames" index="languageCode" item="username" open="(" separator=" or " close=")">
        ((skipped.username = #{username} or m.applied_username = #{username}) and m.article_language_code = #{languageCode})
    </foreach>
        GROUP BY m.article_language_code,
        applied
    </select>
    <select id="getDecisionStatsPercentageWeek" resultType="org.languagetool.server.DatabaseAccess$WeekStatistics">
        select distinct date_format(applied_date, '%Y w%u') AS week,
                        100 * AVG(applied)
        FROM corpus_match months
        where applied_date is not null
        group by week;
    </select>
    <select id="getTopContributors" resultType="org.languagetool.server.DatabaseAccess$ContributionStatisticsPerMonth">
        SELECT date_format(applied_date, '%Y-%m') as month, article_language_code, applied_username, count(*)
        FROM corpus_match
        WHERE applied_date is not null
        GROUP BY month, article_language_code, applied_username
        ORDER BY month DESC, article_language_code, count(*) DESC
    </select>
    <select id="getPendingSuggestionsPerLanguageCode" resultType="org.languagetool.server.DatabaseAccess$PendingSuggestionsPerLanguageCode">
        SELECT article_language_code, count(*)
        FROM corpus_match
        WHERE applied is null AND article_language_code != 'en'
        GROUP BY article_language_code
        ORDER BY article_language_code
    </select>
    <select id="getMostRefusedSuggestionCategoriesPerLanguageCode" resultType="org.languagetool.server.DatabaseAccess$RefusedSuggestionCategoryPerLanguageCode">
        SELECT languagetool_version,
               article_language_code,
               rule_category,
               rule_description,
               COUNT(*),
               (
                   SELECT sample.id
                   FROM corpus_match sample
                   WHERE sample.article_id IN (
                       select id from corpus_article sample_article where article_language_code = sample_article.language_code
                   )
                     AND rule.languagetool_version = sample.languagetool_version
                     AND rule.rule_category = sample.rule_category
                     AND rule.rule_description = sample.rule_description
                   ORDER BY rule.applied_date DESC
                   LIMIT 1
               ) AS sample_suggestion_id
        FROM corpus_match rule
        WHERE applied = 0
          AND applied_date > date_sub(current_date, interval 2 week)
        GROUP BY languagetool_version, article_language_code, rule_category, rule_description
        HAVING COUNT(*) > 10
        ORDER BY languagetool_version DESC, article_language_code, COUNT(*) DESC
        LIMIT 10
    </select>
    <insert id="insertAccessToken">
        INSERT INTO access_token(language_code, username, access_token, access_token_secret) VALUES(#{languageCode}, #{username}, #{accessToken}, #{accessTokenSecret})
    </insert>
    <delete id="deleteAccessToken">
        DELETE FROM access_token WHERE access_token=#{accessToken}
    </delete>
</mapper>
